<controls:MetroWindow x:Class="TestExerciserPro.IViews.AutoTesting.MainAutoTesting"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:controls="clr-namespace:TestExerciserPro.UI.Controls;assembly=TestExerciserPro.UI"
                      xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                      xmlns:demoEdit="https://github.com/devdiv/TestExecutePro.Eidtor"
                      xmlns:forms="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                      xmlns:xcad="http://schemas.xceed.com/wpf/xaml/avalondock"
                      xmlns:local="clr-namespace:TestExerciserPro.IViews.AutoTesting"
                      xmlns:s="clr-namespace:System;assembly=mscorlib"
                      mc:Ignorable="d"
                      Title="自动化测试" 
                      Height="900" 
                      Width="1440"
                      WindowStartupLocation="CenterScreen"
                      Closing="MainAutoTesting_WinddowClosing"
                      >

    <Window.Resources>
        <local:ActiveDocumentConverter x:Key="ActiveDocumentConverter"/>
        <xcad:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="30" />
        </Grid.RowDefinitions>
        <Menu Height="30" Grid.Row="0">
            <MenuItem Header="文件(F)">
                <MenuItem Header="新建(N)">
                    <MenuItem Header="项目"></MenuItem>
                    <MenuItem Header="文件"></MenuItem>
                </MenuItem>
                <MenuItem Header="打开(O)">
                    <MenuItem Header="项目"></MenuItem>
                    <MenuItem Header="文件"></MenuItem>
                </MenuItem>
                <MenuItem Header="添加(D)">
                    <MenuItem Header="新建项目"></MenuItem>
                    <MenuItem Header="现有项目"></MenuItem>
                </MenuItem>
                <MenuItem Header="关闭(C)"/>
                <MenuItem Header="关闭解决方案(T)"/>
                <MenuItem Header="保存(S)   Ctrl + S"/>
                <MenuItem Header="全部保存(L)   Ctrl + Shift + S"/>
                <MenuItem Header="账户设置(I)..."/>
                <MenuItem Header="最近使用过的文件(F)"/>
                <MenuItem Header="最近使用过的项目和解决方案"/>
                <MenuItem Header="退出(X)   Ctrl + F4"/>
            </MenuItem>
            <MenuItem Header="编辑(E)">
                <MenuItem Header="撤销(U)   Ctrl + Z"/>
                <MenuItem Header="重做(R)  Ctrl + Y"/>
                <MenuItem Header="剪贴(T)  Ctrl + X"/>
                <MenuItem Header="复制(C)  Ctrl + C"/>
                <MenuItem Header="粘贴(P)  Ctrl + V"/>
                <MenuItem Header="删除(D)  Del"/>
                <MenuItem Header="全选(U)  Ctrl + A"/>
                <MenuItem Header="查找和替换...(F)"/>
                <MenuItem Header="转到(G)...  Ctrl + G"/>
                <MenuItem Header="定位到(,)...  Ctrl + ,"/>
            </MenuItem>
            <MenuItem Header="视图(V)">
                <MenuItem Header="类视图(A)  Ctrl + Shift + C"/>
            </MenuItem>
            <MenuItem Header="项目(P)">
                <MenuItem Header="添加项目(P)...  Ctrl + Shift + N"/>
                <MenuItem Header="添加文件夹(F)...  Ctrl + Shift + F"/>
                <MenuItem Header="添加文件(P)..."/>
            </MenuItem>

            <MenuItem Header="生成"></MenuItem>
            <MenuItem Header="调试"></MenuItem>
            <MenuItem Header="团队(M)">
                <MenuItem Header="管理连接(N)..."/>
            </MenuItem>
            <MenuItem Header="工具(T)"></MenuItem>
            <MenuItem Header="体系结构(C)"></MenuItem>
            <MenuItem Header="测试(S)"></MenuItem>
            <MenuItem Header="窗口(W)">
                <MenuItem Header="重置窗口布局(R)"/>
            </MenuItem>
            <MenuItem Header="帮助(H)">
                <MenuItem Header="查看帮助(V)...  Ctrl + F1"/>
                <MenuItem Header="关于TestExerciserPro(A)"/>
            </MenuItem>
        </Menu>

        <ToolBar Height="32" Grid.Row="1">
            <ToolBar.Resources>
                <Style TargetType="{x:Type Image}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ButtonBase}, AncestorLevel=1}, Path=IsEnabled}" Value="False">
                            <Setter Property="Opacity" Value="0.30" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ToolBar.Resources>
            <Button Click="openFileClick">
                <Image Source="Images/Open.png" Height="16"/>
            </Button>
            <Button Click="saveFileClick">
                <Image Source="Images/Save.png" Height="16"/>
            </Button>
            <Separator/>
            <Button Command="Cut">
                <Image Source="Images/Cut.png" Height="16"/>
            </Button>
            <Button Command="Copy">
                <Image Source="Images/Copy.png" Height="16"/>
            </Button>
            <Button Command="Paste">
                <Image Source="Images/Paste.png" Height="16"/>
            </Button>
            <Button Command="Delete">
                <Image Source="Images/Delete.png" Height="16"/>
            </Button>
            <Separator/>
            <Button Command="Undo">
                <Image Source="Images/Undo.png" Height="16"/>
            </Button>
            <Button Command="Redo">
                <Image Source="Images/Redo.png" Height="16"/>
            </Button>
            <Separator/>
            <CheckBox IsChecked="{Binding Source=currentTextEditor,Path=WordWrap}">
                <Image Source="Images/WordWrap.png" Height="16"/>
            </CheckBox>
            <CheckBox IsChecked="{Binding Source=currentTextEditor,Path=ShowLineNumbers}">
                <TextBlock Width="16" TextAlignment="Center">#</TextBlock>
            </CheckBox>
            <CheckBox IsChecked="{Binding Source=currentTextEditor,Path=Options.ShowEndOfLine}">
                <TextBlock Width="16" TextAlignment="Center">¶</TextBlock>
            </CheckBox>
            <ComboBox Name="highlightingComboBox"
				SelectedItem="{Binding SyntaxHighlighting, Source=currentTextEditor}"
				ItemsSource="{Binding Source={x:Static demoEdit:HighlightingManager.Instance}, Path=HighlightingDefinitions}"
                SelectionChanged="HighlightingComboBox_SelectionChanged"/>
        </ToolBar>

        <xcad:DockingManager Name="dockManager" Grid.Row="2"
                             AnchorablesSource="{Binding Tools}" 
                             DocumentsSource="{Binding Files}"
                             ActiveContent="{Binding ActiveDocument, Mode=TwoWay, Converter={StaticResource ActiveDocumentConverter}}">
            <!--<avalonDock:DockingManager.Theme>
                <avalonDock:AeroTheme/>
            </avalonDock:DockingManager.Theme>-->

            <xcad:DockingManager.LayoutItemTemplateSelector>
                <local:PanesTemplateSelector>
                    <local:PanesTemplateSelector.FileViewTemplate>
                        <DataTemplate>
                            <TextBox Text="{Binding TextContent, UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </local:PanesTemplateSelector.FileViewTemplate>
                    <local:PanesTemplateSelector.FileStatsViewTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Vertical">
                                <TextBlock Text="{Binding FileSize}"/>
                                <TextBlock Text="{Binding LastModified}"/>
                                <TextBox Text="test"/>
                            </StackPanel>
                        </DataTemplate>
                    </local:PanesTemplateSelector.FileStatsViewTemplate>
                </local:PanesTemplateSelector>
            </xcad:DockingManager.LayoutItemTemplateSelector>
            <xcad:DockingManager.LayoutItemContainerStyleSelector>
                <local:PanesStyleSelector>
                    <local:PanesStyleSelector.ToolStyle>
                        <Style TargetType="{x:Type xcad:LayoutAnchorableItem}">
                            <Setter Property="Title" Value="{Binding Model.Title}"/>
                            <Setter Property="IconSource" Value="{Binding Model.IconSource}"/>
                            <Setter Property="Visibility" Value="{Binding Model.IsVisible, Mode=TwoWay, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter={x:Static Visibility.Hidden}}"/>
                            <Setter Property="ContentId" Value="{Binding Model.ContentId}"/>
                            <Setter Property="IsSelected" Value="{Binding Model.IsSelected, Mode=TwoWay}"/>
                            <Setter Property="IsActive" Value="{Binding Model.IsActive, Mode=TwoWay}"/>
                        </Style>
                    </local:PanesStyleSelector.ToolStyle>
                    <local:PanesStyleSelector.FileStyle>
                        <Style TargetType="{x:Type xcad:LayoutItem}">
                            <Setter Property="Title" Value="{Binding Model.Title}"/>
                            <Setter Property="ToolTip" Value="{Binding Model.FilePath}"/>
                            <Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}"/>
                            <Setter Property="IconSource" Value="{Binding Model.IconSource}"/>
                            <Setter Property="ContentId" Value="{Binding Model.ContentId}"/>
                        </Style>
                    </local:PanesStyleSelector.FileStyle>
                </local:PanesStyleSelector>
            </xcad:DockingManager.LayoutItemContainerStyleSelector>
            <xcad:DockingManager.LayoutUpdateStrategy>
                <local:LayoutInitializer/>
            </xcad:DockingManager.LayoutUpdateStrategy>

            <xcad:LayoutRoot x:Name="_layoutRoot">
                <xcad:LayoutPanel Orientation="Horizontal">
                    <xcad:LayoutAnchorablePane DockWidth="200">
                        <xcad:LayoutAnchorable ContentId="solution" Title="解决方案" CanHide="True" CanClose="True"
                                            AutoHideWidth="240" CanFloat="True">
                        </xcad:LayoutAnchorable>
                    </xcad:LayoutAnchorablePane>
                    <xcad:LayoutDocumentPaneGroup>
                        <xcad:LayoutDocumentPane x:Name="layOutPane" >
                            <xcad:LayoutDocument ContentId="welcomePage" Title="欢迎使用">
                            </xcad:LayoutDocument>
                        </xcad:LayoutDocumentPane>
                    </xcad:LayoutDocumentPaneGroup >
                    <xcad:LayoutAnchorablePaneGroup DockWidth="125">
                        <xcad:LayoutAnchorablePane>
                            <xcad:LayoutAnchorable ContentId="alarms" Title="Alarms" >
                                <ListBox>
                                    <s:String>Alarm 1</s:String>
                                    <s:String>Alarm 2</s:String>
                                    <s:String>Alarm 3</s:String>
                                </ListBox>
                            </xcad:LayoutAnchorable>
                            <xcad:LayoutAnchorable ContentId="journal" Title="日记" >
                                <RichTextBox>
                                    <FlowDocument>
                                        <Paragraph FontSize="14" FontFamily="Segoe">
                                            This is the content of the Journal Pane.
                                            <LineBreak/>
                                            A
                                            <Bold>RichTextBox</Bold> has been added here
                                        </Paragraph>
                                    </FlowDocument>
                                </RichTextBox>
                            </xcad:LayoutAnchorable>
                        </xcad:LayoutAnchorablePane>
                    </xcad:LayoutAnchorablePaneGroup>
                </xcad:LayoutPanel>

                <xcad:LayoutRoot.LeftSide>
                    <xcad:LayoutAnchorSide>
                        <xcad:LayoutAnchorGroup>
                            <xcad:LayoutAnchorable Title="日程表" ContentId="agenda" >
                                <TextBlock Text="Agenda Content" Margin="10" FontSize="18" FontWeight="Black" TextWrapping="Wrap"/>
                            </xcad:LayoutAnchorable>
                            <xcad:LayoutAnchorable Title="联系人" ContentId="contacts">
                                <TextBlock Text="Contacts Content" Margin="10" FontSize="18" FontWeight="Black" TextWrapping="Wrap"/>
                            </xcad:LayoutAnchorable>
                        </xcad:LayoutAnchorGroup>
                    </xcad:LayoutAnchorSide>
                </xcad:LayoutRoot.LeftSide>
            </xcad:LayoutRoot>


        </xcad:DockingManager>


        <StatusBar Grid.Row="3">
        </StatusBar>
   
        </Grid>
</controls:MetroWindow>
